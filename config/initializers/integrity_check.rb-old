# Verify that all users have their own folder in <RAILS_ROOT>/u/
# User with user_id johnsmith123 will have a folder in 
# RAILS_ROOT/u/johnsmith123
# (see User controller for more info)

# Global User Directory
Rails.logger.info "<DEV INFO> Running Integrity Checks..."
Rails.logger.info "<DEV INFO> Checking /u/"
global_dir = Rails.root.join('u').to_s
global_permission = 0770
if File.directory?(global_dir)
  Rails.logger.info "<DEV INFO> /u/ exists!"
else
  Rails.logger.info "<DEV INFO> /u/ does not exist!"
  Dir.mkdir(global_dir,global_permission) unless File.directory?(global_dir)
  Rails.logger.info "<DEV INFO> /u/ created!"
end

# Verify that programs are soft-linked in <RAILS_ROOT>/bin/
Rails.logger.info "<DEV INFO> Checking for programs..."
program_dir = Rails.root.join('bin').to_s
if File.directory?(program_dir)
  Rails.logger.info "<DEV INFO> /bin/ found!"
else
  Rails.logger.info "<DEV INFO> /bin/ not found!"
end

# Verify that config templates have a directory
Rails.logger.info "<DEV INFO> Checking config templates..."
template_dir = Rails.root.join('config_templates').to_s
user_permission = 0700
unless File.directory?(template_dir)
  Rails.logger.info "<DEV INFO> creating /config_templates/ ..."
  Dir.mkdir(template_dir, user_permission)
  Rails.logger.info "<DEV INFO> empty /config_templates/ created!"
end

# Verify that confs have a directory
Rails.logger.info "<DEV INFO> checkings confs directory..."
conf_dir = Rails.root.join('confs').to_s
user_permission = 0700
unless File.directory?(conf_dir)
  Rails.logger.info "<DEV INFO> creating /confs/ ..."
  Dir.mkdir(conf_dir, user_permission)
  Rails.logger.info "<DEV INFO> empty /confs/ created!"
end

# Verify that storage has a directory
Rails.logger.info "<DEV INFO> checkings storage directory..."
storage_dir = Rails.root.join('storage').to_s
user_permission = 0700
unless File.directory?(storage_dir)
  Rails.logger.info "<DEV INFO> creating /storage/ ..."
  Dir.mkdir(storage_dir, user_permission)
  Rails.logger.info "<DEV INFO> empty /storage/ created!"
end

# User directories (in /u/ and /confs/)
Rails.logger.info "<DEV INFO> Checking /u/<user_id>"
User.all.each do |user|
  user_dir = Rails.root.join('u', user.user_id).to_s
  user_permission = 0700
  if File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> #{user.user_id} has directory!"
  else
    Rails.logger.info "<DEV INFO> #{user.user_id} does not have directory!"
    Dir.mkdir(user_dir,user_permission) unless File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> /u/#{user.user_id} created!"
  end
end

Rails.logger.info "<DEV INFO> Checking /confs/<user_id>"
User.all.each do |user|
  user_dir = Rails.root.join('confs', user.user_id).to_s
  user_permission = 0700
  if File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> #{user.user_id} has directory!"
  else
    Rails.logger.info "<DEV INFO> #{user.user_id} does not have directory!"
    Dir.mkdir(user_dir,user_permission) unless File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> /confs/#{user.user_id} created!"
  end
end

# User storage (in /storage/)
Rails.logger.info "<DEV INFO> Checking /storage/<id>"
User.all.each do |user|
  user_dir = Rails.root.join('storage', user.id).to_s
  user_permission = 0700
  if File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> #{user.id} has directory!"
  else
    Rails.logger.info "<DEV INFO> #{user.id} does not have directory!"
    Dir.mkdir(user_dir,user_permission) unless File.directory?(user_dir)
    Rails.logger.info "<DEV INFO> /confs/#{user.id} created!"
  end
end
